Framework :
    -> it is a structure that you can build software on it 
    -> Using Framework Saves time and reduces the risk of error'S
    -> you don't need to configure it (it creates a directory structure)

Libraries Vs Framework
    -> Library (collection of pre-written code that )can be used to perform common task)
    -> User / programmer is calling the code

Framework :
    -> in Framework it is the code in the Framework thats call the code

______________________________________________________________________________________________________________________________

Django:
    -> open-source web Framework written in python that allows you to create web application
    -> supported by an independent foundation (Django software foundation)
    -> Django is primarilyy a backend framework, it has feature that allows it to handle frontend development as well 

Why Django:
    -> set-up easy
    -> ready-to-user interface for administration activities


______________________________________________________________________________________________________________________________

Python Package index(PyPi)
       -> Repository of software for the python programming language
       -> (helps you to find and install software developed and shared by python community)


 ______________________________________________________________________________________________________________________________

 step 1 :   django-admin startproject schedule
 step 2 :   cd schedule
 step 3 :   django-admin startapp month


 step - 1 : pip install virtualenvwrapper-win

 step - 2 : mkvirtualenv myproject

 step - 3 : workon myproject

 step - 4 : pip install django

 step - 5 : cd myproject

 step - 6 : python manage.py runserver

Create a Django App :
    -> python manage.py startapp myapp



Django makes use of a directory structure to arrange different parts of the web application
>schedule
  schdedule -->  __init__.py
               settings.py
               urls.py
               wsgi.py
          asgi.py
       manage.py
manage.py : 
->command-line utility for our project
->the file contains the code for running the server,makemigrations ... and several commands
->it lets you to interact with your project

settings.py :
    -> typically used to store configuration information in django
    -> default database is set here
 
__init__.py 
    -> empty file, function of this file tells python interpreter that is directory ha Package

urls.py :
    -> used to provide you the address of the particular Package

wsgi.py (web server gateway interface)
    -> it is the way how servers interact with the applications
    asgi.py()


 step 1:     mkvirtualenv myproject
 step 2 :    pip install django
 step 3 :    django-admin startproject schedule
 step 4 :    cd schedule
 step 5 :    django-admin startapp month

 step 6 : deactive